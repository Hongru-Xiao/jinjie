{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /data/apps/cuda/11.6\nNVCC: Cuda compilation tools, release 11.6, V11.6.112\nGCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nPyTorch: 1.12.0+cu116\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.0+cu116\nOpenCV: 4.7.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMClassification: 0.25.0+", "seed": 812676580, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='ResNet_CIFAR',\n        depth=101,\n        num_stages=4,\n        out_indices=(3, ),\n        style='pytorch'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=10,\n        in_channels=2048,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))\nload_from = '/data/run01/scz0atc/mmclass/mmclassification/configs/resnet18/resnet101_b16x8_cifar10_20210528-2d29e936.pth'\ndataset_type = 'CIFAR10'\nimg_norm_cfg = dict(\n    mean=[125.307, 122.961, 113.8575],\n    std=[51.5865, 50.847, 51.255],\n    to_rgb=False)\ntrain_pipeline = [\n    dict(type='RandomCrop', size=32, padding=4),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=16,\n    workers_per_gpu=2,\n    train=dict(\n        type='CIFAR10',\n        data_prefix='data/cifar10',\n        pipeline=[\n            dict(type='RandomCrop', size=32, padding=4),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CIFAR10',\n        data_prefix='data/cifar10',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True),\n    test=dict(\n        type='CIFAR10',\n        data_prefix='data/cifar10',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True))\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[100, 150])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=1000, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = 'work/resnet/resnet101_8xb16_cifar10'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 812676580\n", "CLASSES": ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00225, "loss": 1.74697, "time": 0.05753}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 1.45791, "time": 0.05242}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 1.30102, "time": 0.05241}
{"mode": "val", "epoch": 1, "iter": 625, "lr": 0.1, "accuracy_top-1": 59.09, "accuracy_top-5": 95.64}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 1.18478, "time": 0.05443}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00013, "loss": 1.13118, "time": 0.05188}
{"mode": "train", "epoch": 2, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 1.06822, "time": 0.0523}
{"mode": "val", "epoch": 2, "iter": 625, "lr": 0.1, "accuracy_top-1": 64.93999, "accuracy_top-5": 97.23}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 1.00378, "time": 0.05427}
{"mode": "train", "epoch": 3, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00014, "loss": 0.99328, "time": 0.05193}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00013, "loss": 0.94834, "time": 0.05187}
{"mode": "val", "epoch": 3, "iter": 625, "lr": 0.1, "accuracy_top-1": 66.76, "accuracy_top-5": 97.56}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.90619, "time": 0.05413}
{"mode": "train", "epoch": 4, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.89037, "time": 0.05227}
{"mode": "train", "epoch": 4, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.86005, "time": 0.05261}
{"mode": "val", "epoch": 4, "iter": 625, "lr": 0.1, "accuracy_top-1": 67.73, "accuracy_top-5": 97.39}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.81392, "time": 0.05435}
{"mode": "train", "epoch": 5, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.80132, "time": 0.05246}
{"mode": "train", "epoch": 5, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.78356, "time": 0.05229}
{"mode": "val", "epoch": 5, "iter": 625, "lr": 0.1, "accuracy_top-1": 73.49, "accuracy_top-5": 98.4}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.75682, "time": 0.05426}
{"mode": "train", "epoch": 6, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.75298, "time": 0.05245}
{"mode": "train", "epoch": 6, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.7419, "time": 0.05259}
{"mode": "val", "epoch": 6, "iter": 625, "lr": 0.1, "accuracy_top-1": 74.2, "accuracy_top-5": 98.2}
{"mode": "train", "epoch": 7, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.719, "time": 0.05467}
{"mode": "train", "epoch": 7, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.72477, "time": 0.05245}
{"mode": "train", "epoch": 7, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.69833, "time": 0.05269}
{"mode": "val", "epoch": 7, "iter": 625, "lr": 0.1, "accuracy_top-1": 73.22, "accuracy_top-5": 98.25999}
{"mode": "train", "epoch": 8, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.67746, "time": 0.05441}
{"mode": "train", "epoch": 8, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.69336, "time": 0.05262}
{"mode": "train", "epoch": 8, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.69, "time": 0.05265}
{"mode": "val", "epoch": 8, "iter": 625, "lr": 0.1, "accuracy_top-1": 68.04, "accuracy_top-5": 97.68}
{"mode": "train", "epoch": 9, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.67029, "time": 0.0542}
{"mode": "train", "epoch": 9, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.67716, "time": 0.05211}
{"mode": "train", "epoch": 9, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.66675, "time": 0.05247}
{"mode": "val", "epoch": 9, "iter": 625, "lr": 0.1, "accuracy_top-1": 75.63, "accuracy_top-5": 98.46}
{"mode": "train", "epoch": 10, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00214, "loss": 0.65097, "time": 0.05388}
{"mode": "train", "epoch": 10, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00015, "loss": 0.66463, "time": 0.05188}
{"mode": "train", "epoch": 10, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.65617, "time": 0.0522}
{"mode": "val", "epoch": 10, "iter": 625, "lr": 0.1, "accuracy_top-1": 77.63, "accuracy_top-5": 98.67}
{"mode": "train", "epoch": 11, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.64245, "time": 0.05458}
{"mode": "train", "epoch": 11, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.6381, "time": 0.05263}
{"mode": "train", "epoch": 11, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.63745, "time": 0.05254}
{"mode": "val", "epoch": 11, "iter": 625, "lr": 0.1, "accuracy_top-1": 77.12, "accuracy_top-5": 98.02}
{"mode": "train", "epoch": 12, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.64258, "time": 0.05457}
{"mode": "train", "epoch": 12, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00014, "loss": 0.63263, "time": 0.05211}
{"mode": "train", "epoch": 12, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.64016, "time": 0.05267}
{"mode": "val", "epoch": 12, "iter": 625, "lr": 0.1, "accuracy_top-1": 74.31, "accuracy_top-5": 98.07}
{"mode": "train", "epoch": 13, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.63418, "time": 0.05405}
{"mode": "train", "epoch": 13, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.6188, "time": 0.05253}
{"mode": "train", "epoch": 13, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.64161, "time": 0.05193}
{"mode": "val", "epoch": 13, "iter": 625, "lr": 0.1, "accuracy_top-1": 79.42, "accuracy_top-5": 98.85}
{"mode": "train", "epoch": 14, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.61233, "time": 0.0543}
{"mode": "train", "epoch": 14, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.61937, "time": 0.05191}
{"mode": "train", "epoch": 14, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.61973, "time": 0.05245}
{"mode": "val", "epoch": 14, "iter": 625, "lr": 0.1, "accuracy_top-1": 76.34, "accuracy_top-5": 98.65}
{"mode": "train", "epoch": 15, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.60645, "time": 0.05397}
{"mode": "train", "epoch": 15, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.60693, "time": 0.05206}
{"mode": "train", "epoch": 15, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.61825, "time": 0.05192}
{"mode": "val", "epoch": 15, "iter": 625, "lr": 0.1, "accuracy_top-1": 79.25, "accuracy_top-5": 99.04}
{"mode": "train", "epoch": 16, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.59632, "time": 0.05464}
{"mode": "train", "epoch": 16, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.60803, "time": 0.05264}
{"mode": "train", "epoch": 16, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.60241, "time": 0.05264}
{"mode": "val", "epoch": 16, "iter": 625, "lr": 0.1, "accuracy_top-1": 77.79, "accuracy_top-5": 98.93}
{"mode": "train", "epoch": 17, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.5973, "time": 0.05461}
{"mode": "train", "epoch": 17, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00013, "loss": 0.60365, "time": 0.0527}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.59601, "time": 0.05251}
{"mode": "val", "epoch": 17, "iter": 625, "lr": 0.1, "accuracy_top-1": 80.74, "accuracy_top-5": 98.9}
{"mode": "train", "epoch": 18, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.58913, "time": 0.05456}
{"mode": "train", "epoch": 18, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.5854, "time": 0.0526}
{"mode": "train", "epoch": 18, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.59624, "time": 0.05262}
{"mode": "val", "epoch": 18, "iter": 625, "lr": 0.1, "accuracy_top-1": 78.32, "accuracy_top-5": 98.34}
{"mode": "train", "epoch": 19, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.57467, "time": 0.05464}
{"mode": "train", "epoch": 19, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.58875, "time": 0.05208}
{"mode": "train", "epoch": 19, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.59755, "time": 0.05204}
{"mode": "val", "epoch": 19, "iter": 625, "lr": 0.1, "accuracy_top-1": 78.88, "accuracy_top-5": 98.92}
{"mode": "train", "epoch": 20, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.59087, "time": 0.05389}
{"mode": "train", "epoch": 20, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.58359, "time": 0.05185}
{"mode": "train", "epoch": 20, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.57664, "time": 0.05217}
{"mode": "val", "epoch": 20, "iter": 625, "lr": 0.1, "accuracy_top-1": 79.25999, "accuracy_top-5": 98.99}
{"mode": "train", "epoch": 21, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00211, "loss": 0.57189, "time": 0.05457}
{"mode": "train", "epoch": 21, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.57954, "time": 0.0522}
{"mode": "train", "epoch": 21, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.58998, "time": 0.05254}
{"mode": "val", "epoch": 21, "iter": 625, "lr": 0.1, "accuracy_top-1": 78.21, "accuracy_top-5": 98.21}
{"mode": "train", "epoch": 22, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.57056, "time": 0.05439}
{"mode": "train", "epoch": 22, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.5638, "time": 0.05207}
{"mode": "train", "epoch": 22, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.58644, "time": 0.05264}
{"mode": "val", "epoch": 22, "iter": 625, "lr": 0.1, "accuracy_top-1": 80.72, "accuracy_top-5": 98.88}
{"mode": "train", "epoch": 23, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.5614, "time": 0.05451}
{"mode": "train", "epoch": 23, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.56554, "time": 0.05255}
{"mode": "train", "epoch": 23, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 9e-05, "loss": 0.56849, "time": 0.05254}
{"mode": "val", "epoch": 23, "iter": 625, "lr": 0.1, "accuracy_top-1": 77.98, "accuracy_top-5": 98.48}
{"mode": "train", "epoch": 24, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.56599, "time": 0.0544}
{"mode": "train", "epoch": 24, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00015, "loss": 0.57643, "time": 0.05243}
{"mode": "train", "epoch": 24, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.0001, "loss": 0.56888, "time": 0.05274}
{"mode": "val", "epoch": 24, "iter": 625, "lr": 0.1, "accuracy_top-1": 76.57, "accuracy_top-5": 98.7}
{"mode": "train", "epoch": 25, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.56336, "time": 0.05443}
{"mode": "train", "epoch": 25, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.56432, "time": 0.05196}
{"mode": "train", "epoch": 25, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00013, "loss": 0.56193, "time": 0.05193}
{"mode": "val", "epoch": 25, "iter": 625, "lr": 0.1, "accuracy_top-1": 82.32, "accuracy_top-5": 99.27}
{"mode": "train", "epoch": 26, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.54492, "time": 0.05419}
{"mode": "train", "epoch": 26, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.55365, "time": 0.05248}
{"mode": "train", "epoch": 26, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.57614, "time": 0.05256}
{"mode": "val", "epoch": 26, "iter": 625, "lr": 0.1, "accuracy_top-1": 82.37, "accuracy_top-5": 98.95}
{"mode": "train", "epoch": 27, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00211, "loss": 0.55443, "time": 0.05483}
{"mode": "train", "epoch": 27, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.557, "time": 0.05212}
{"mode": "train", "epoch": 27, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.57102, "time": 0.05232}
{"mode": "val", "epoch": 27, "iter": 625, "lr": 0.1, "accuracy_top-1": 81.68, "accuracy_top-5": 98.98}
{"mode": "train", "epoch": 28, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00214, "loss": 0.55109, "time": 0.05407}
{"mode": "train", "epoch": 28, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.5632, "time": 0.0525}
{"mode": "train", "epoch": 28, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.55108, "time": 0.05227}
{"mode": "val", "epoch": 28, "iter": 625, "lr": 0.1, "accuracy_top-1": 79.35, "accuracy_top-5": 99.05}
{"mode": "train", "epoch": 29, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00212, "loss": 0.55111, "time": 0.05461}
{"mode": "train", "epoch": 29, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.55598, "time": 0.05246}
{"mode": "train", "epoch": 29, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00012, "loss": 0.55099, "time": 0.05216}
{"mode": "val", "epoch": 29, "iter": 625, "lr": 0.1, "accuracy_top-1": 81.85, "accuracy_top-5": 99.07}
{"mode": "train", "epoch": 30, "iter": 1000, "lr": 0.1, "memory": 1110, "data_time": 0.00213, "loss": 0.54108, "time": 0.0544}
{"mode": "train", "epoch": 30, "iter": 2000, "lr": 0.1, "memory": 1110, "data_time": 0.00011, "loss": 0.55293, "time": 0.05258}
{"mode": "train", "epoch": 30, "iter": 3000, "lr": 0.1, "memory": 1110, "data_time": 0.00013, "loss": 0.56074, "time": 0.05215}
{"mode": "val", "epoch": 30, "iter": 625, "lr": 0.1, "accuracy_top-1": 79.89, "accuracy_top-5": 99.21}
